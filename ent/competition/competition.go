// Code generated by entc, DO NOT EDIT.

package competition

const (
	// Label holds the string label denoting the competition type in the database.
	Label = "competition"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldRootPassword holds the string denoting the root_password field in the database.
	FieldRootPassword = "root_password"
	// FieldConfig holds the string denoting the config field in the database.
	FieldConfig = "config"

	// EdgeDNS holds the string denoting the dns edge name in mutations.
	EdgeDNS = "dns"

	// Table holds the table name of the competition in the database.
	Table = "competitions"
	// DNSTable is the table the holds the dns relation/edge.
	DNSTable = "dn_ss"
	// DNSInverseTable is the table name for the DNS entity.
	// It exists in this package in order to avoid circular dependency with the "dns" package.
	DNSInverseTable = "dn_ss"
	// DNSColumn is the table column denoting the dns relation/edge.
	DNSColumn = "competition_dns"
)

// Columns holds all SQL columns for competition fields.
var Columns = []string{
	FieldID,
	FieldRootPassword,
	FieldConfig,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the Competition type.
var ForeignKeys = []string{
	"environment_competition",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}
