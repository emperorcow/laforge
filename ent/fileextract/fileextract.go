// Code generated by entc, DO NOT EDIT.

package fileextract

const (
	// Label holds the string label denoting the fileextract type in the database.
	Label = "file_extract"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldSource holds the string denoting the source field in the database.
	FieldSource = "source"
	// FieldDestination holds the string denoting the destination field in the database.
	FieldDestination = "destination"
	// FieldType holds the string denoting the type field in the database.
	FieldType = "type"

	// EdgeTag holds the string denoting the tag edge name in mutations.
	EdgeTag = "tag"

	// Table holds the table name of the fileextract in the database.
	Table = "file_extracts"
	// TagTable is the table the holds the tag relation/edge.
	TagTable = "tags"
	// TagInverseTable is the table name for the Tag entity.
	// It exists in this package in order to avoid circular dependency with the "tag" package.
	TagInverseTable = "tags"
	// TagColumn is the table column denoting the tag relation/edge.
	TagColumn = "file_extract_tag"
)

// Columns holds all SQL columns for fileextract fields.
var Columns = []string{
	FieldID,
	FieldSource,
	FieldDestination,
	FieldType,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}
